using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEuler
{
    class HighlyDivTri
    {

        /*
       Project Euler #12 Highly Divisible Triangle Number
        The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle 
        number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

        1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

        Let us list the factors of the first seven triangle numbers:

        1: 1
        3: 1,3
        6: 1,2,3,6
        10: 1,2,5,10
        15: 1,3,5,15
        21: 1,3,7,21
        28: 1,2,4,7,14,28
        We can see that 28 is the first triangle number to have over five divisors.

        What is the value of the first triangle number to have over five hundred divisors?
	ANS: 76576500*/
       

        static void Main(string[] args)
        {
            int myNum = 0, myDivs = 0, temp = 1, i = 1;
            while (true)
            {
                //get the triangle num
                myNum += i;

                while (true)
                {
                    //get the factors for the num
                    if (myNum % temp == 0)
                    {
                        //add to total num of factors
                        myDivs++;
                        //if temp == the num were done checking 
                        if (temp == myNum)
                            break;
                    }
                    //if we havent left yet check the next factor
                    temp++;
                }
                Console.WriteLine(myNum + ": " + myDivs);
                //if the num of divs is greater than 500 were done
                if (myDivs > 500)
                    break;
                else
                {
                    //if div wasnt 500 reset the values and check the next tri num
                    temp = 1;
                    myDivs = 0;
                    i++;
                }
            }


            Console.Read();
        }
    }
}
